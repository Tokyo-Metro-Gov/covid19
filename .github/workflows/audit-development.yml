name: Audit development URLs

on:
  pull_request:
    branches:
      - development

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Waiting for 200 from the Netlify Preview
        uses: jakepartusch/wait-for-netlify-action@v1
        id: waitFor200
        with:
          # Change site_name if you want to run this workflow against the Netlify configured for your local repository
          site_name: "dev-covid19-tokyo"
          max_timeout: 600 # 10 * 60 seconds

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v2
        with:
          urls: |
            ${{ steps.waitFor200.outputs.url }}
            https://dev-covid19-tokyo.netlify.com/
          uploadArtifacts: true

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm install -g csv2md

      # https://stedolan.github.io/jq/manual/
      # https://shields.io/
      - name: Summary
        run: |
          export LH_SUMMARY_FILE="${GITHUB_WORKSPACE}/.lighthouseci/result.md"
          echo "::set-env name=LH_SUMMARY_FILE::${LH_SUMMARY_FILE}"
          cat "${GITHUB_WORKSPACE}/.lighthouseci/"lhr-*.json \
          | jq -rs 'def formatScore(s):
              "https://img.shields.io" as $baseUrl |
              "logo=lighthouse&logoColor=lightgray" as $query |
              if s == null then "![-1](\($baseUrl)/badge/\("?" | @uri)-error-inactive?\($query))"
                elif s < 0.5 then "![\(s)](\($baseUrl)/badge/\( s * 100 )-red-critical?\($query))"
                elif s < 0.9 then "![\(s)](\($baseUrl)/badge/\( s * 100 )-orange-important?\($query))"
                else "![\(s)](\($baseUrl)/badge/\( s * 100 )-green-success?\($query))"
              end;
              ["Metrics", "Score", "URL"], ( [.[] | .requestedUrl as $url | .categories[] | {
                metrics: .title,
                score: formatScore(.score),
                url: $url
              } ] | sort_by(.metrics) | .[] | [.metrics, .score, .url] ) | @csv' \
          | csv2md | tee "${LH_SUMMARY_FILE}"

      # Workaround to suppress the unrecognized named-value error
      # https://github.community/t5/GitHub-Actions/If-expression-with-context-variable/td-p/34556
      - name: Initialize workflow variables
        id: vars
        env:
          LHCI_TOKEN: "${{ secrets.LHCI_TOKEN }}"
        run: |
          echo ::set-output name=LHCI_TOKEN::${LHCI_TOKEN:-sample}

      - uses: actions/github-script@0.9.0
        env:
          LHCI_TOKEN: "${{ secrets.LHCI_TOKEN }}"
        with:
          github-token: ${{ steps.vars.outputs.LHCI_TOKEN }}
          script: |
            const LHCI_TOKEN = process.env.LHCI_TOKEN || ''
            if (LHCI_TOKEN === '') {
              console.log('ABORTED: the required variable env.LHCI_TOKEN is empty')
              return
            }
            const fs = require('fs')
            const table = fs.readFileSync(process.env.LH_SUMMARY_FILE, 'utf8')
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `<h4>Audit&nbsp;<a
                  href="https://developers.google.com/web/tools/lighthouse/v3/scoring"
                  target="_blank"><sup>[?]</sup></a></h4>\n\n${table}\n\n`.trim()
            })
